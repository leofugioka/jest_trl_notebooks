[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>ContentInfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <ul>Listgroup</ul>\n      <li>Listitem</li>\n    </div>\n  );\n}\n\nrender(<RoleExample />);","type":"code","id":"thhk0"},{"content":"test('can find elements by role', () => {\n  render(<RoleExample />);\n\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'textbox',\n    'radio',\n    'spinbutton',\n    'listitem',\n    'list',\n  ];\n\n  for (let role of roles) {\n    const el = screen.getByRole(role);\n\n    expect(el).toBeInTheDocument();\n  }\n});","type":"code","id":"yim56"},{"content":"function AccessibleName() {\n  return (\n    <div>\n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n}\n\nrender(<AccessibleName />)","type":"code","id":"pgv21"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n\n  const submitButton = screen.getByRole('button', { name: /submit/i });\n  const cancelButton = screen.getByRole('button', { name: /cancel/i });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"azwiw"},{"content":"function MoreNames() {\n  return (\n    <div>\n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\"/>\n\n      <label htmlFor=\"search\">Search</label>\n      <input id=\"search\" />\n    </div>\n  );\n}\n\nrender(<MoreNames />);","type":"code","id":"maheh"},{"content":"test('has an input for email and another for search', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', { name: /email/i });\n  const searchInput = screen.getByRole('textbox', { name: /search/i });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n});","type":"code","id":"3owzd"},{"content":"function IconButtons() {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n\n      <button aria-label=\"sign out\">\n        <svg />\n      </button>\n    </div>\n  );\n}\n\nrender(<IconButtons />);","type":"code","id":"521ty"},{"content":"test('must show two svg buttons separately selectable', () => {\n  render(<IconButtons />);\n\n  const signInButton = screen.getByRole('button', { name: /sign in/i });\n  const signOutButton = screen.getByRole('button', { name: /sign out/i });\n\n  expect(signInButton).toBeInTheDocument();\n  expect(signOutButton).toBeInTheDocument();\n});","type":"code","id":"dabu2"}]